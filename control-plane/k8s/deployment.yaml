apiVersion: apps/v1
kind: Deployment
metadata:
  name: control-plane
  namespace: devys
  labels:
    app: control-plane
    component: backend
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: control-plane
  template:
    metadata:
      labels:
        app: control-plane
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: control-plane
      containers:
      - name: control-plane
        image: devys/control-plane:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: api
          containerPort: 3000
          protocol: TCP
        - name: context-mcp
          containerPort: 9001
          protocol: TCP
        - name: model-mcp
          containerPort: 9002
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_PATH
          value: "/data/control.db"
        - name: WORKSPACE_PATH
          value: "/workspace"
        - name: MCP_CONTEXT_PORT
          value: "9001"
        - name: MCP_MODEL_PORT
          value: "9002"
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: anthropic
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: openai
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: google
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: database
              key: url
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: api
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: api
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 2
        volumeMounts:
        - name: data
          mountPath: /data
        - name: workspace
          mountPath: /workspace
        - name: config
          mountPath: /app/config
          readOnly: true
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: control-plane-data
      - name: workspace
        persistentVolumeClaim:
          claimName: control-plane-workspace
      - name: config
        configMap:
          name: control-plane-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - control-plane
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: control-plane-service
  namespace: devys
  labels:
    app: control-plane
spec:
  type: ClusterIP
  ports:
  - name: api
    port: 3000
    targetPort: api
    protocol: TCP
  - name: context-mcp
    port: 9001
    targetPort: context-mcp
    protocol: TCP
  - name: model-mcp
    port: 9002
    targetPort: model-mcp
    protocol: TCP
  selector:
    app: control-plane
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: control-plane
  namespace: devys
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: control-plane-data
  namespace: devys
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: control-plane-workspace
  namespace: devys
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: shared-nfs